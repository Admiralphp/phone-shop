basePath: /api/v1
definitions:
  api.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  api.StockUpdateRequest:
    properties:
      quantity:
        type: integer
    required:
    - quantity
    type: object
  models.Category:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      imageUrl:
        type: string
      isActive:
        type: boolean
      name:
        type: string
      parent:
        $ref: '#/definitions/models.Category'
      parentId:
        type: integer
      updatedAt:
        type: string
    type: object
  models.JSON:
    additionalProperties: true
    type: object
  models.PaginatedResponse:
    properties:
      items: {}
      page:
        type: integer
      pageSize:
        type: integer
      totalItems:
        type: integer
      totalPages:
        type: integer
    type: object
  models.Product:
    properties:
      attributes:
        $ref: '#/definitions/models.JSON'
      category:
        $ref: '#/definitions/models.Category'
      categoryId:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      imageUrl:
        type: string
      isActive:
        type: boolean
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      stockLevel:
        type: integer
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@company.com
    name: API Support
    url: http://www.company.com/support
  description: API for managing phone accessories products
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Phone Accessories Product Service API
  version: "1.0"
paths:
  /categories:
    get:
      consumes:
      - application/json
      description: Get all product categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: List categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Add a new product category
      parameters:
      - description: Category information
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create category
      tags:
      - categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing product category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Delete category
      tags:
      - categories
    get:
      consumes:
      - application/json
      description: Get detailed information about a category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get category by ID
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: Update an existing product category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Category information
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Update category
      tags:
      - categories
  /products:
    get:
      consumes:
      - application/json
      description: Get paginated products with filtering options
      parameters:
      - description: Filter by category ID
        in: query
        name: categoryId
        type: integer
      - description: Filter by minimum price
        in: query
        name: minPrice
        type: number
      - description: Filter by maximum price
        in: query
        name: maxPrice
        type: number
      - description: Search query
        in: query
        name: q
        type: string
      - description: Filter by stock availability
        in: query
        name: inStock
        type: boolean
      - description: Sort field
        in: query
        name: sortBy
        type: string
      - description: Sort direction (asc or desc)
        in: query
        name: sortDir
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: List products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Add a new product
      parameters:
      - description: Product information
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create product
      tags:
      - products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Delete product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get detailed information about a product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update an existing product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product information
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Update product
      tags:
      - products
  /products/{id}/stock:
    patch:
      consumes:
      - application/json
      description: Update product stock level
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Stock update information
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/api.StockUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Update product stock
      tags:
      - products
  /search:
    get:
      consumes:
      - application/json
      description: Search products by query
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Search products
      tags:
      - search
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
